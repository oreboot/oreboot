name: qemu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  BuildX86QEMU:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Install Dependencies'
      run: sudo apt-get update && make ciprepare
    - name: 'Build QEMU q35 board for x86'
      run: |
        cd src/mainboard/emulation/qemu-q35
        make
    - name: 'Check QEMU q35 stack size'
      run: |
        cd src/mainboard/emulation/qemu-q35
        STACK_SIZES=$(make stack-sizes | tee /dev/stdout)
        if ! echo "$STACK_SIZES" | grep '0x[0-9a-f]\+\s\+[0-9]\+\s\+_start' > /dev/null; then
          echo "Error: Didn't see stack size of _start. make stack-sizes might be broken."
          exit 1
        fi

  BuildFSPQEMU:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Install Dependencies'
      run: sudo apt-get update && make ciprepare
    - name: 'Build FSP QEMU firmware'
      run: |
        cd src/mainboard/emulation/qemu-fsp
        make
    - name: 'Check FSP QEMU stack size'
      run: |
        cd src/mainboard/emulation/qemu-fsp
        STACK_SIZES=$(make stack-sizes | tee /dev/stdout)
        if ! echo "$STACK_SIZES" | grep '0x[0-9a-f]\+\s\+[0-9]\+\s\+_start' > /dev/null; then
          echo "Error: Didn't see stack size of _start. make stack-sizes might be broken."
          exit 1
        fi
    - name: 'Run FSP QEMU firmware in QEMU'
      run: |
        (
          cd src/mainboard/emulation/qemu-fsp
          timeout 120s make run | tee serial
          grep Running.payload serial
        )

  TestSiFiveQEMU:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Install Dependencies'
      run: sudo apt-get update && make ciprepare
    - name: 'Build SiFice QEMU firmware'
      run: |
        (
          cd src/mainboard/sifive/hifive
          PAYLOAD_A=../../../../payloads/src/external/simple/testtesttest make
        )
    - name: 'Build QEMU'
      run: |
        exit 0 # Rebuilding QEMU takes too long. Remove once we cache.
        git clone --single-branch --branch v5.1.0 https://github.com/qemu/qemu
        mkdir qemu/build-riscv64
        (
          cd qemu/build-riscv64
          ../configure --target-list=riscv64-softmmu
          make -j16
          sudo ln -s $PWD/riscv64-softmmu/qemu-system-riscv64 /usr/bin/
          sudo ln -s $PWD/qemu-img /usr/bin/
        )
    - name: 'Run test'
      run: |
        exit 0 # Rebuilding QEMU takes too long. Remove once we cache.
        (
          cd src/mainboard/sifive/hifive
          PAYLOAD_A=../../../../payloads/src/external/simple/testtesttest timeout 120s make run | tee serial
          grep TESTTESTTEST serial
        )

  TestRISCVVirtBoardQEMU:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Install Dependencies'
      run: sudo apt-get update && make ciprepare
    - name: 'Build oreboot image'
      run: |
        (
          cd src/mainboard/emulation/qemu-riscv
          make
          STACK_SIZES=$(make stack-sizes | tee /dev/stdout)
          if ! echo "$STACK_SIZES" | grep '0x[0-9a-f]\+\s\+[0-9]\+\s\+_start' > /dev/null; then
            echo "Error: Didn't see stack size of _start. make stack-sizes might be broken."
            exit 1
          fi
        )
    - name: 'Build QEMU'
      run: |
        exit 0 # Rebuilding QEMU takes too long. Remove once we cache.
        git clone --single-branch --branch v5.1.0 https://github.com/qemu/qemu
        mkdir qemu/build-riscv64
        (
          cd qemu/build-riscv64
          ../configure --target-list=riscv64-softmmu
          make -j16
          sudo ln -s $PWD/riscv64-softmmu/qemu-system-riscv64 /usr/bin/
          sudo ln -s $PWD/qemu-img /usr/bin/
        )
    - name: 'Run test'
      run: |
        exit 0 # Rebuilding QEMU takes too long. Remove once we cache.
        (
          cd src/mainboard/emulation/qemu-riscv
          timeout 30s make run | tee serial
          grep "Running payload" serial
        )
